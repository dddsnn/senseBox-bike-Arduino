/*
 * Copyright (c) 2024 EdgeImpulse Inc.
 *
 * Generated by Edge Impulse and licensed under the applicable Edge Impulse
 * Terms of Service. Community and Professional Terms of Service
 * (https://docs.edgeimpulse.com/page/terms-of-service) or Enterprise Terms of
 * Service (https://docs.edgeimpulse.com/page/enterprise-terms-of-service),
 * according to your product plan subscription (the “License”).
 *
 * This software, documentation and other associated files (collectively referred
 * to as the “Software”) is a single SDK variation generated by the Edge Impulse
 * platform and requires an active paid Edge Impulse subscription to use this
 * Software for any purpose.
 *
 * You may NOT use this Software unless you have an active Edge Impulse subscription
 * that meets the eligibility requirements for the applicable License, subject to
 * your full and continued compliance with the terms and conditions of the License,
 * including without limitation any usage restrictions under the applicable License.
 *
 * If you do not have an active Edge Impulse product plan subscription, or if use
 * of this Software exceeds the usage limitations of your Edge Impulse product plan
 * subscription, you are not permitted to use this Software and must immediately
 * delete and erase all copies of this Software within your control or possession.
 * Edge Impulse reserves all rights and remedies available to enforce its rights.
 *
 * Unless required by applicable law or agreed to in writing, the Software is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing
 * permissions, disclaimers and limitations under the License.
 */

#ifndef _EI_CLASSIFIER_ANOMALY_METADATA_H_
#define _EI_CLASSIFIER_ANOMALY_METADATA_H_

#include "edge-impulse-sdk/classifier/ei_model_types.h"

const uint16_t ei_classifier_anom_axes[] = { 34, 39, 50, 51 };

// (before - mean) / scale
const float ei_classifier_anom_scale[4] = { 0.5416533563239591, 0.09015729639833903, 1.0294240433862007, 1.096378936020027 };
const float ei_classifier_anom_mean[4] = { 0.03455881324858127, 0.10589062549018612, -2.209211271086283, -2.3116334193141053 };
const ei_classifier_anom_cluster_t ei_classifier_anom_clusters[8] = {
	{ ( float[4] ) { 1.0734399557113647, -0.023915553465485573, -0.01212439313530922, -0.1604887992143631 }, 2.5846379257650534 },
	{ ( float[4] ) { -0.5077088475227356, -0.3683217465877533, -0.003865385428071022, -0.026378273963928223 }, 1.3933135298881023 },
	{ ( float[4] ) { -0.4711293876171112, -0.7223562598228455, -0.9130646586418152, -0.844504177570343 }, 1.257243963664562 },
	{ ( float[4] ) { 0.03918825462460518, 0.3383142650127411, 0.788090705871582, 0.7845598459243774 }, 1.8856774835956625 },
	{ ( float[4] ) { 1.2283564805984497, 1.3667869567871094, 1.2501126527786255, 1.2151165008544922 }, 1.994476336738268 },
	{ ( float[4] ) { -1.6664172410964966, -0.841610312461853, -0.8762819170951843, -0.8702648282051086 }, 1.553957906202182 },
	{ ( float[4] ) { 1.3542894124984741, -1.1588361263275146, -3.346615791320801, -3.0488224029541016 }, 2.6641038204790792 },
	{ ( float[4] ) { 0.4166669547557831, 4.2802863121032715, 2.0104823112487793, 2.0778849124908447 }, 1.1217992889063322 },
};

#endif // _EI_CLASSIFIER_ANOMALY_METADATA_H_
